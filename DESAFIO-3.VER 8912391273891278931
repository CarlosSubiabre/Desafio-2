def camposCovid(lineas):#[[Region, fecha1, fech2],[nombreregion,fecha1, fecg2linea2],linea3,etc]
	
	region = []
	fechas = lineas[0].split(',') # primera linea que tiene las fechas
	
	
	i = 1
	while (i < len(lineas)):
		lineanueva = lineas[i].split(',') # cuando i = 1, estamos hablando de la segunda linea del archivo
		j = 1 # partimos del segundo campo que es donde inician las fechas en este archivo
		personasCovid = {}
		while(j < len(lineanueva)):
			if lineanueva[j] != "":
				personasCovid[fechas[j]]=lineanueva[j]
			else:
				personasCovid[fechas[j]] = "0"
			j = j + 1
		region.append(personasCovid)
		i = i + 1
	
	return region

def camposUCI(lineas):#[linea1,linea2,linea3,etc]
	
	region = []
	fechas = lineas[0].split(',') # primera linea que tiene las fechas
	
	
	i = 1
	while (i < len(lineas)):
		lineanueva = lineas[i].split(',') # cuando i = 1, estamos hablando de la segunda linea del archivo
		j = 3 # partimos del cuarto campo que es donde inician las fechas en este archivo
		personasCovid = {}
		while(j < len(lineanueva)):
			if lineanueva[j] != "":
				personasCovid[fechas[j]]=lineanueva[j]
			else:
				personasCovid[fechas[j]] = "0"
			j = j + 1
		region.append(personasCovid)
		i = i + 1
	
	return region
	
def camposPCR(lineas):#[linea1,linea2,linea3,etc]
	
	region = []
	fechas = lineas[0].split(',') # primera linea que tiene las fechas
	
	
	i = 1
	while (i < len(lineas)):
		lineanueva = lineas[i].split(',') # cuando i = 1, estamos hablando de la segunda linea del archivo
		j = 3 # partimos del cuarto campo que es donde inician las fechas en este archivo
		personasCovid = {}
		while(j < len(lineanueva)):
			if lineanueva[j] != "":
				personasCovid[fechas[j]]=lineanueva[j]
			else:
				personasCovid[fechas[j]] = "0"
			j = j + 1
		region.append(personasCovid)
		i = i + 1
	
	return region

def Poblacion(lineas):#[linea1,linea2,linea3,etc]
	
	region = []
	
	i = 1
	totalpais = 0
	while (i < len(lineas)):
		lineanueva = lineas[i].split(',') # cuando i = 1, estamos hablando de la segunda linea del archivo
		region.append(int(lineanueva[2]))
		totalpais = totalpais + int(lineanueva[2])
		i = i + 1
	
	region.append(totalpais)
	
	return region
	
def leerycargarArchivos():
# abrir archivos
	leerCovid  = open("Casos-nuevos-totales-por-region.txt")
	leidoCovid = leerCovid.readlines() # leer todo el archivo y pasarlo a una lista
	leerCovid.close()
	leerPCR    = open("Examenes-PCR-region.txt")
	leidoPCR   = leerPCR.readlines() # leer todo el archivo y pasarlo a una lista
	leerPCR.close()
	leerUCI    = open("Pacientes-UCI-region.txt")
	leidoUCI   = leerUCI.readlines() # leer todo el archivo y pasarlo a una lista
	leerUCI.close()
	
# pasar contenido de archivos a estructura de datos tipo Lista de Diccionarios
	
	personasCovid = camposCovid(leidoCovid) #[linea1, linea2, linea3...] -> [region, fecha1, fecha2, etc.]
	personasPCR = camposPCR(leidoPCR)
	personasUCI = camposUCI(leidoUCI)
	PersonasRegion = Poblacion(leidoPCR)

	return personasCovid,personasPCR, personasUCI, PersonasRegion
	
def CodRegiones():
	print ("Arica y Parinacota ➤ 0")
	print ("Tarapacá ➤ 1")
	print ("Antofagasta ➤ 2")
	print ("Coquimbo ➤ 3")
	print ("Valparaíso ➤ 4")
	print ("Metropolitána ➤ 5")
	print ("O’Higgins ➤ 6")
	print ("Maule ➤ 7")
	print ("Ñuble ➤ 8")
	print ("Biobío ➤ 9")
	print ("Araucanía ➤ 10")
	print ("Los Ríos ➤ 11")
	print ("Los Lagos ➤ 12")
	print ("Aysén ➤ 13")
	print ("Magallanes ➤ 14\n\n")

def Menu():
	print("\n\n\nIngrese su opción: ")
	print("[1] Casos, UCI y PCR en un día \n")
	print("[2] Comparar Casos, UCI y PCR en un día \n ")
	print("[3] Mostrar Tasa de Positividad \n ")
	print("[4] Mostrar Tasa de Positividadde un més \n ")
	print("[5] Mostrar Relación Población y Covid positivo regiones \n ")
	print("[6] TOP 10 Covid Positivo \n ")
	
	
	print("9: Salir \n ")
	op = int(input())
	
	return op

def NombreRegion(cod):
	dicCodReg = {
		0: "Arica y Parinacota",
		1: "Tarapacá",
		2: "Antofagasta",
		3: "Coquimbo",
		4: "Valparaíso",
		5: "Metropolitána",
		6: "O’Higgins",
		7: "Maule",
		8: "Ñuble",
		9: "Biobío",
		10: "Araucanía",
		11:"Los Ríos",
		12: "Los Lagos",
		13: "Aysén",
		14: "Magallanes",
		15: "Chile"
		}
	return dicCodReg[cod]
	
def requerimiento1(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada):
	
	# CovidPositivo
	if fechasolicitada in personasCovid[regionsolicitada].keys(): # verificamos si la fecha ingresada se encuentra en las claves (fechas)
		print("El día ",fechasolicitada," se registraron ",personasCovid[regionsolicitada][fechasolicitada], " personas Covid Positivo en la Región de ",NombreRegion(regionsolicitada))
		covidPais = 0
		for i in range(0,15):
			covidPais = covidPais + int(personasCovid[i][fechasolicitada])
		print("Además, a nivel país, el día ",fechasolicitada," se registraron ",covidPais, " personas Covid Positivo")
	else:
		print("No registramos datos personas Covid positivo para la fecha ", fechasolicitada) 
	# PCR
	if fechasolicitada in personasPCR[regionsolicitada].keys(): # verificamos si la fecha ingresada se encuentra en las claves (fechas)
		print("El día ",fechasolicitada," se registraron ",personasPCR[regionsolicitada][fechasolicitada], " exámenes PCR en la Región de ",NombreRegion(regionsolicitada))
		pcrPais = 0
		for i in range(0,15):
			pcrPais = pcrPais + int(personasPCR[i][fechasolicitada])
		print("Además, a nivel país, el día ",fechasolicitada," se registraron ",pcrPais, " exámenes PCR")
	else:
		print("No registramos datos de exámenes PCR para la fecha ", fechasolicitada)
	# UCI
	if fechasolicitada in personasUCI[regionsolicitada].keys(): # verificamos si la fecha ingresada se encuentra en las claves (fechas)
		print("El día ",fechasolicitada," se registraron ",personasUCI[regionsolicitada][fechasolicitada], " personas en UCI en la Región de ",NombreRegion(regionsolicitada))
		uciPais = 0
		for i in range(0,15):
			uciPais = uciPais + int(personasUCI[i][fechasolicitada])
		print("Además, a nivel país, el día ",fechasolicitada," se registraron ",uciPais, " personas en UCI")
	else:
		print("No registramos datos de personas en UCI para la fecha ", fechasolicitada)
	
def requerimiento2(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada):
	
	fechaTemp = fechasolicitada.split("-")
	fechaanoanterior = str(int(fechaTemp[0]) - 1) + "-" + fechaTemp[1] + "-" + fechaTemp[2]
	
	requerimiento1(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	requerimiento1(personasCovid,personasPCR, personasUCI,regionsolicitada,fechaanoanterior)
	
def requerimiento3(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada):
	
	
	if fechasolicitada in personasCovid[regionsolicitada].keys() and fechasolicitada in personasPCR[regionsolicitada].keys(): # verificamos si la fecha ingresada se encuentra en las claves (fechas)
		num = int(personasCovid[regionsolicitada][fechasolicitada])
		den = int(personasUCI[regionsolicitada][fechasolicitada])
		if den == 0:
			res = 0
		else:
			res = round((num/den),2)
		
		print("El día ",fechasolicitada," la tasa de positividad fué ",res, "% en la Región de ",NombreRegion(regionsolicitada))
		covidPais = 0
		pcrPais = 0
		for i in range(0,15):
			covidPais = covidPais + int(personasCovid[i][fechasolicitada])
			pcrPais = pcrPais + int(personasPCR[i][fechasolicitada])
		if pcrPais ==0:
			resP = 0
		else:
			resP = round((covidPais/pcrPais),2)
			
		print("Además, a nivel país, el día ",fechasolicitada," la tasa de positividad fué de ",resP, " %")
	else:
		print("No podemos calcular la tasa de positividad porque faltán datos para la fecha ", fechasolicitada)
		
	return res,resP

def requerimiento4(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada):
	

	
	positividadR = 0
	positividadP = 0
	dias = 0
	
	
	for key in personasCovid[regionsolicitada].keys():
		
		if fechasolicitada == key[0:7]: 
			posR, posP = requerimiento3(personasCovid,personasPCR, personasUCI,regionsolicitada,key)
			positividadR = positividadR + posR
			positividadP = positividadP + posP
			dias = dias + 1
		
	print(" La positividad promedio del mes ", fechasolicitada,", es ", positividadR/dias, " en la región de ", NombreRegion(regionsolicitada))
	print(" Además, a nivel país, el promedio de positividad en el mes ",fechasolicitada," ad fué de ",positividadP/dias, " %")
	
def requerimiento5(personasCovid,personasPCR, personasUCI,fechasolicitada, PersonasRegion):
	
	# Mostrar la relaci´on entre cantidad de personas COVID positivo y la poblaci´on de la regi´on. 
	# Imprimir los datos de mayor a menor valor. Indicar adem´as cuales regiones est´an por sobre y bajo el valor a novel pa´ıs.
	
	
	# Vamos a asumir que el usuario requiere de un día determinado
	
	relacion = {}
	relacioninvertida = {}
	valores = []
	i = 0
	while(i < len(PersonasRegion)-1):
		relacion[NombreRegion(i)] = int(personasCovid[i][fechasolicitada])/PersonasRegion[i] # int(personasCovid[i][fechasolicitada])
		relacioninvertida [int(personasCovid[i][fechasolicitada])/PersonasRegion[i]] = NombreRegion(i)
		valores.append(int(personasCovid[i][fechasolicitada])/PersonasRegion[i])
		i = i + 1
	

	ordenado = sorted(valores)
	
	for valor in ordenado:
		#if valor es menor al valor nacional:
		print("La relación COVID / Población en la región ", relacioninvertida[valor], " para el día ", fechasolicitada, " es ", valor)
		



def requerimiento6(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada):
	
	
	
	#Identificar y mostrar los 10 d´ıas de cada a˜no con mayor cantidad de personas COVID positivo.
	#Esta informaci´on ser´a para alguna regi´on en particular y nivel pa´ıs
	
	covidyeardato = []
	covidyeardia = []
	
	
	for key in personasCovid[regionsolicitada].keys():
		
		if fechasolicitada == key[0:4]:
			covidyeardato.append(int(personasCovid[regionsolicitada][key]))
			covidyeardia.append(key)
			
		
	i = 0
	
	while(i < len(covidyeardato)):
		j = i
		while(j < len(covidyeardato)):
			
			if covidyeardato[i] <  covidyeardato[j]:
				
				temp= covidyeardato[i]
				covidyeardato[i] = covidyeardato[j]
				covidyeardato[j] = temp
				
				temp2= covidyeardia[i]
				covidyeardia[i] = covidyeardia[j]
				covidyeardia[j] = temp2
			j = j + 1
    
		i = i + 1
	
	dias = 0
	
	while(dias < 10):
		print(covidyeardia[dias], covidyeardato[dias])
		dias = dias + 1
		
	
    # en la última pos  de PersonasRegion está la  población de Chile....En el ciclo anterior, tienen que sumar todos los valores... y esa suma, la dividen en la poblacion de Chile. 
def datos():
	print("Ingrese Región: ")
	CodRegiones()
	regionsolicitada = int(input())
	print("Ingrese la fecha a evaluar. Use el siguiente formato: yyyy-mm-dd\n\n")
	fechasolicitada = input()
	
	return regionsolicitada,fechasolicitada
	
def datosmes():
	print("Ingrese Región: ")
	CodRegiones()
	regionsolicitada = int(input())
	print("Ingrese la fecha a evaluar. Use el siguiente formato: yyyy-mm \n\n")
	fechasolicitada = input()
	
	return regionsolicitada,fechasolicitada

def datosregion():
	print("Ingrese la fecha a evaluar. Use el siguiente formato: yyyy-mm-dd \n\n")
	fechasolicitada = input()
	
	return fechasolicitada

def datosyear():
	print("Ingrese Región: ")
	CodRegiones()
	regionsolicitada = int(input())
	print("Ingrese la fecha a evaluar. Use el siguiente formato: yyyy \n\n")
	fechasolicitada = input()
	
	return regionsolicitada,fechasolicitada

###Programa Principal

personasCovid,personasPCR, personasUCI, PersonasRegion = leerycargarArchivos()

op = Menu()
while(op != 9):
	
	if op == 1:
		regionsolicitada, fechasolicitada = datos()
		requerimiento1(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	elif op == 2:
		regionsolicitada, fechasolicitada = datos()
		requerimiento2(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	elif op ==3:
		regionsolicitada, fechasolicitada = datos()
		res, resP = requerimiento3(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	elif op ==4:
		regionsolicitada, fechasolicitada = datosmes()
		requerimiento4(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	elif op ==5:
		fechasolicitada = datosregion()
		requerimiento5(personasCovid,personasPCR, personasUCI,fechasolicitada, PersonasRegion)
	elif op ==6:
		regionsolicitada, fechasolicitada = datosyear()
		requerimiento6(personasCovid,personasPCR, personasUCI,regionsolicitada,fechasolicitada)
	
	op = Menu()









